/*
 * Copyright (c) 2015 HERE Global B.V. and its affiliate(s).
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
 
const int MATRIX_WIDTH = 7;
const int MATRIX_HEIGHT = 7;

struct Icon
{
    Icon(int f_num, const char * f_ptr)
    : framesNum( f_num )
    , frames(f_ptr)
    {}

    int framesNum;
    const char * frames;
    char getRow(int frameNum, int rowNum) const
    {
      return *(frames + frameNum * MATRIX_HEIGHT + rowNum);
    }
};

  // 0 - undefined
const char undefinedFrames[][MATRIX_HEIGHT] = {
  {0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08}
};
const Icon undefined(1, undefinedFrames[0]);

 // 1 - go straight
const char goStraightFrames[][MATRIX_HEIGHT] = {
  {0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00}
};
const Icon goStraight(1, goStraightFrames[0]);

// 2 - uturn right
const char uturnRightFrames[][MATRIX_HEIGHT] = {
  {0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20},
  {0x00, 0x1c, 0x20, 0x20, 0x20, 0x20, 0x20},
  {0x00, 0x1c, 0x22, 0x22, 0x22, 0x22, 0x22},
  {0x00, 0x1c, 0x02, 0x02, 0x02, 0x02, 0x02},
  {0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
};
const Icon uturnRight(6, uturnRightFrames[0]);

// 3 - uturn left
const char uturnLeftFrames[][MATRIX_HEIGHT] = {
  {0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02},
  {0x00, 0x1c, 0x02, 0x02, 0x02, 0x02, 0x02},
  {0x00, 0x1c, 0x22, 0x22, 0x22, 0x22, 0x22},
  {0x00, 0x1c, 0x20, 0x20, 0x20, 0x20, 0x20},
  {0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
};
const Icon uturnLeft(6, uturnLeftFrames[0]);

 // 4 - keep right
const char keepRightFrames[][MATRIX_HEIGHT] = {
  {0x02, 0x02, 0x02, 0x1c, 0x20, 0x20, 0x20}
};
const Icon keepRight(1, keepRightFrames[0]);

 // 5 - light right
const char lightRightFrames[][MATRIX_HEIGHT] = {
  {0x01, 0x02, 0x04, 0x08, 0x00, 0x00, 0x00}
};
const Icon lightRight(1, lightRightFrames[0]);

 // 6 - quite right
const char quiteRightFrames[][MATRIX_HEIGHT] = {
  {0x0f, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00}
};
const Icon quiteRight(1, quiteRightFrames[0]);

 // 7 - heavy right
const char heavyRightFrames[][MATRIX_HEIGHT] = {
  {0x08, 0x0c, 0x0a, 0x09, 0x00, 0x00, 0x00}
};
const Icon heavyRight(1, heavyRightFrames[0]);

 // 8 - keep middle
const char keepMiddleFrames[][MATRIX_HEIGHT] = {
  {0x49, 0x2a, 0x08, 0x08, 0x00, 0x00, 0x00}
};
const Icon keepMiddle(1, keepMiddleFrames[0]);

 // 9 - keep left
const char keepLeftFrames[][MATRIX_HEIGHT] = {
  {0x20, 0x20, 0x20, 0x1c, 0x02, 0x02, 0x02}
};
const Icon keepLeft(1, keepLeftFrames[0]);

 // 10- light left
const char lightLeftFrames[][MATRIX_HEIGHT] = {
  {0x40, 0x20, 0x10, 0x08, 0x00, 0x00, 0x00}
};
const Icon lightLeft(1, lightLeftFrames[0]);

 // 11 - quite left
const char quiteLeftFrames[][MATRIX_HEIGHT] = {
  {0x78, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00}
};
const Icon quiteLeft(1, quiteLeftFrames[0]);

 // 12 - heavy left
const char heavyLeftFrames[][MATRIX_HEIGHT] = {
  {0x08, 0x18, 0x28, 0x48, 0x00, 0x00, 0x00}
};
const Icon heavyLeft(1, heavyLeftFrames[0]);

  // 13 - start
const char startFrames[][MATRIX_HEIGHT] = {
  {0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x1c, 0x1c, 0x1c, 0x00, 0x00},
  {0x00, 0x3e, 0x22, 0x2a, 0x22, 0x3e, 0x00},
  {0x7f, 0x41, 0x41, 0x49, 0x41, 0x41, 0x7f}
};
const Icon start(4, startFrames[0]);

 // 14 - end
const char finishFrames[][MATRIX_HEIGHT] = {
  {0x55, 0x2a, 0x55, 0x2a, 0x55, 0x2a, 0x55}
};
const Icon finish(1, finishFrames[0]);

 // 20 - light right soon
const char lightRightSoonFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x02, 0x04, 0x08, 0x00, 0x00, 0x00},
    {0x01, 0x00, 0x04, 0x08, 0x00, 0x00, 0x00},
    {0x01, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00},
    {0x01, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00}
};
const Icon lightRightSoon(4, lightRightSoonFrames[0]);

 // 21 - quite right soon
const char quiteRightSoonFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x0f, 0x08, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x0f, 0x00, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x07, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x0b, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x0d, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x0e, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x0f, 0x08, 0x08, 0x00, 0x00, 0x00}
};
const Icon quiteRightSoon(7, quiteRightSoonFrames[0]);

 // 22 - heavy right soon
const char heavyRightSoonFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x01},
    {0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x01},
    {0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x01},
    {0x00, 0x00, 0x00, 0x08, 0x04, 0x02, 0x00},
    {0x00, 0x00, 0x00, 0x08, 0x04, 0x02, 0x01}
};
const Icon heavyRightSoon(5, heavyRightSoonFrames[0]);

 // 23 - light left soon
const char lightLeftSoonFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x20, 0x10, 0x08, 0x00, 0x00, 0x00},
    {0x40, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00},
    {0x40, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00},
    {0x40, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00}
};
const Icon lightLeftSoon(4, lightLeftSoonFrames[0]);

 // 24 - quite left soon
const char quiteLeftSoonFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x78, 0x00, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x70, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x68, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x58, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x38, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x78, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x78, 0x08, 0x00, 0x00, 0x00, 0x00}
};
const Icon quiteLeftSoon(7, quiteLeftSoonFrames[0]);

 // 25 - heavy left soon
const char heavyLeftSoonFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x00, 0x00, 0x00, 0x10, 0x20, 0x40},
    {0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x40},
    {0x00, 0x00, 0x00, 0x08, 0x10, 0x00, 0x40},
    {0x00, 0x00, 0x00, 0x08, 0x10, 0x20, 0x00},
    {0x00, 0x00, 0x00, 0x08, 0x10, 0x20, 0x40}
};
const Icon heavyLeftSoon(5, heavyLeftSoonFrames[0]);

 // 26 - light right now
const char lightRightNowFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x02, 0x04, 0x08, 0x00, 0x00, 0x00},
    {0x01, 0x00, 0x04, 0x08, 0x00, 0x00, 0x00},
    {0x01, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00},
    {0x01, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00}
};
const Icon lightRightNow(4, lightRightNowFrames[0]);

 // 27 - quite right now
const char quiteRightNowFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x0f, 0x08, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x0f, 0x00, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x07, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x0b, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x0d, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x0e, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x0f, 0x08, 0x08, 0x00, 0x00, 0x00}
};
const Icon quiteRightNow(7, quiteRightNowFrames[0]);

 // 28 - heavy right now
const char heavyRightNowFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x01},
    {0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x01},
    {0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x01},
    {0x00, 0x00, 0x00, 0x08, 0x04, 0x02, 0x00},
    {0x00, 0x00, 0x00, 0x08, 0x04, 0x02, 0x01}
};
const Icon heavyRightNow(5, heavyRightNowFrames[0]);

 // 29 - light left now
const char lightLeftNowFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x20, 0x10, 0x08, 0x00, 0x00, 0x00},
    {0x40, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00},
    {0x40, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00},
    {0x40, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00}
};
const Icon lightLeftNow(4, lightLeftNowFrames[0]);

 // 30 - quite left now
const char quiteLeftNowFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x78, 0x00, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x70, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x68, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x58, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x38, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x78, 0x08, 0x08, 0x00, 0x00, 0x00},
    {0x00, 0x78, 0x08, 0x00, 0x00, 0x00, 0x00}
};
const Icon quiteLeftNow(7, quiteLeftNowFrames[0]);

 // 31 - heavy left now
const char heavyLeftNowFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x00, 0x00, 0x00, 0x10, 0x20, 0x40},
    {0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x40},
    {0x00, 0x00, 0x00, 0x08, 0x10, 0x00, 0x40},
    {0x00, 0x00, 0x00, 0x08, 0x10, 0x20, 0x00},
    {0x00, 0x00, 0x00, 0x08, 0x10, 0x20, 0x40}
};
const Icon heavyLeftNow(5, heavyLeftNowFrames[0]);

 // 32 - keep right soon
const char keepRightSoonFrames[][MATRIX_HEIGHT] = {
    {0x02, 0x02, 0x02, 0x1c, 0x20, 0x20, 0x00},
    {0x02, 0x02, 0x02, 0x1c, 0x20, 0x00, 0x20},
    {0x02, 0x02, 0x02, 0x1c, 0x00, 0x20, 0x20},
    {0x02, 0x02, 0x02, 0x0c, 0x20, 0x20, 0x20},
    {0x02, 0x02, 0x02, 0x14, 0x20, 0x20, 0x20},
    {0x02, 0x02, 0x02, 0x18, 0x20, 0x20, 0x20},
    {0x02, 0x02, 0x00, 0x1c, 0x20, 0x20, 0x20},
    {0x02, 0x00, 0x02, 0x1c, 0x20, 0x20, 0x20},
    {0x00, 0x02, 0x02, 0x1c, 0x20, 0x20, 0x20},
    {0x02, 0x02, 0x02, 0x1c, 0x20, 0x20, 0x20}
};
const Icon keepRightSoon(10, keepRightSoonFrames[0]);

 // 33 - keep right now
const char keepRightNowFrames[][MATRIX_HEIGHT] = {
    {0x02, 0x02, 0x02, 0x1c, 0x20, 0x20, 0x00},
    {0x02, 0x02, 0x02, 0x1c, 0x20, 0x00, 0x20},
    {0x02, 0x02, 0x02, 0x1c, 0x00, 0x20, 0x20},
    {0x02, 0x02, 0x02, 0x0c, 0x20, 0x20, 0x20},
    {0x02, 0x02, 0x02, 0x14, 0x20, 0x20, 0x20},
    {0x02, 0x02, 0x02, 0x18, 0x20, 0x20, 0x20},
    {0x02, 0x02, 0x00, 0x1c, 0x20, 0x20, 0x20},
    {0x02, 0x00, 0x02, 0x1c, 0x20, 0x20, 0x20},
    {0x00, 0x02, 0x02, 0x1c, 0x20, 0x20, 0x20},
    {0x02, 0x02, 0x02, 0x1c, 0x20, 0x20, 0x20}
};
const Icon keepRightNow(10, keepRightNowFrames[0]);

 // 34 - keep left soon
const char keepLeftSoonFrames[][MATRIX_HEIGHT] = {
    {0x20, 0x20, 0x20, 0x1c, 0x02, 0x02, 0x00},
    {0x20, 0x20, 0x20, 0x1c, 0x02, 0x00, 0x02},
    {0x20, 0x20, 0x20, 0x1c, 0x00, 0x02, 0x02},
    {0x20, 0x20, 0x20, 0x18, 0x02, 0x02, 0x02},
    {0x20, 0x20, 0x20, 0x14, 0x02, 0x02, 0x02},
    {0x20, 0x20, 0x20, 0x0c, 0x02, 0x02, 0x02},
    {0x20, 0x20, 0x00, 0x1c, 0x02, 0x02, 0x02},
    {0x20, 0x00, 0x20, 0x1c, 0x02, 0x02, 0x02},
    {0x00, 0x20, 0x20, 0x1c, 0x02, 0x02, 0x02},
    {0x20, 0x20, 0x20, 0x1c, 0x02, 0x02, 0x02}
};
const Icon keepLeftSoon(10, keepLeftSoonFrames[0]);

 // 35 - keep left now
const char keepLeftNowFrames[][MATRIX_HEIGHT] = {
    {0x20, 0x20, 0x20, 0x1c, 0x02, 0x02, 0x00},
    {0x20, 0x20, 0x20, 0x1c, 0x02, 0x00, 0x02},
    {0x20, 0x20, 0x20, 0x1c, 0x00, 0x02, 0x02},
    {0x20, 0x20, 0x20, 0x18, 0x02, 0x02, 0x02},
    {0x20, 0x20, 0x20, 0x14, 0x02, 0x02, 0x02},
    {0x20, 0x20, 0x20, 0x0c, 0x02, 0x02, 0x02},
    {0x20, 0x20, 0x00, 0x1c, 0x02, 0x02, 0x02},
    {0x20, 0x00, 0x20, 0x1c, 0x02, 0x02, 0x02},
    {0x00, 0x20, 0x20, 0x1c, 0x02, 0x02, 0x02},
    {0x20, 0x20, 0x20, 0x1c, 0x02, 0x02, 0x02}
};
const Icon keepLeftNow(10, keepLeftNowFrames[0]);

//40 - heading 0
const char heading0Frames[][MATRIX_HEIGHT] = {
    {0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00}
};
const Icon heading0(1, heading0Frames[0]);

//41 - heading 45
const char heading45Frames[][MATRIX_HEIGHT] = {
    {0x01, 0x02, 0x04, 0x08, 0x00, 0x00, 0x00}
};
const Icon heading45(1, heading45Frames[0]);

//42 - heading 90
const char heading90Frames[][MATRIX_HEIGHT] = {
    {0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00}
};
const Icon heading90(1, heading90Frames[0]);

//43 - heading 135
const char heading135Frames[][MATRIX_HEIGHT] = {
    {0x00, 0x00, 0x00, 0x08, 0x04, 0x02, 0x01}
};
const Icon heading135(1, heading135Frames[0]);

//44 - heading 180
const char heading180Frames[][MATRIX_HEIGHT] = {
    {0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08}
};
const Icon heading180(1, heading180Frames[0]);

//45 - heading 225
const char heading225Frames[][MATRIX_HEIGHT] = {
    {0x00, 0x00, 0x00, 0x08, 0x10, 0x20, 0x40}
};
const Icon heading225(1, heading225Frames[0]);

//46 - heading 270
const char heading270Frames[][MATRIX_HEIGHT] = {
    {0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00}
};
const Icon heading270(1, heading270Frames[0]);

//47 - heading 315

const char heading315Frames[][MATRIX_HEIGHT] = {
    {0x40, 0x20, 0x10, 0x08, 0x00, 0x00, 0x00}
};
const Icon heading315(1, heading315Frames[0]);

  //60 - gps lost
const char gpsLostFrames[][MATRIX_HEIGHT] = {
    {0x00, 0x1c, 0x20, 0x2e, 0x22, 0x1c, 0x00}
};
const Icon gpsLost(1, gpsLostFrames[0]);

//61 - reroute
const char rerouteFrames[][MATRIX_HEIGHT] = {
    {0x08, 0x38, 0x20, 0x20, 0x20, 0x38, 0x08}
};
const Icon reroute(1, rerouteFrames[0]);

  // on
const char onFrames[][MATRIX_HEIGHT] = {
  {0x00, 0x25, 0x55, 0x56, 0x55, 0x25, 0x00}
};
const Icon on(1, onFrames[0]);


const Icon * icons [] = {
  &undefined,  // 0
  &goStraight, // 1
  &uturnRight, // 2
  &uturnLeft,  // 3
  &keepRight,  // 4
  &lightRight, // 5
  &quiteRight, // 6
  &heavyRight, // 7
  &keepMiddle, // 8
  &keepLeft,   // 9
  &lightLeft,  // 10
  &quiteLeft,  // 11
  &heavyLeft,  // 12
  &start,      // 13
  &finish,     // 14

  &lightRightSoon, // 15
  &quiteRightSoon, // 16
  &heavyRightSoon, // 17
  &lightLeftSoon,  // 18
  &quiteLeftSoon,  // 19
  &heavyLeftSoon,  // 20
  &lightRightNow,  // 21
  &quiteRightNow,  // 22
  &heavyRightNow,  // 23
  &lightLeftNow,   // 24
  &quiteLeftNow,   // 25
  &heavyLeftNow,   // 26
  &keepRightSoon,  // 27
  &keepRightNow,   // 28
  &keepLeftSoon,   // 29
  &keepLeftNow,    // 30

  &heading0,  // 31
  &heading45, // 32
  &heading90, // 33
  &heading135,// 34
  &heading180,// 35
  &heading225,// 36
  &heading270,// 37
  &heading315,// 38

  &gpsLost,  // 39
  &reroute,  // 40

  &on        // 41
};

const int DOUBLE_SPEED_ANIMATIONS [] = {21, 22, 23, 24, 25, 26, 28, 30};

bool isDoubleSpeedAnimation(int code)
{
  int length = sizeof(DOUBLE_SPEED_ANIMATIONS) / sizeof(DOUBLE_SPEED_ANIMATIONS[0]);
  for (int i = 0; i < length; i++)
  {
    if(code == DOUBLE_SPEED_ANIMATIONS[i])
    {
      return true;
    }
  }
  return false;
}

const int MANEUVER_CODES_START = 0;

const int MANEUVER_DISTANCE_CODES_START = 20;
const int MANEUVER_DISTANCE_CODES_INTERNAL_START = 15;


const int HEADING_CODES_START = 40;
const int HEADING_CODES_END = 47;
const int HEADING_CODES_INTERNAL_START = 31;

const int GUIDANCE_CODES_START = 60;
const int GUIDANCE_CODES_INTERNAL_START = 39;

const int BLE_CODES_START = 70;

const int SPECIAL_CODES_START = 80;
const int SPECIAL_CODES_INTERNAL_START = 41;

bool isHeadingCommand(int code)
{
  return code >= HEADING_CODES_START && code <= HEADING_CODES_END;
}

int convertCommandToIcon(int code)
{
  if(code >= MANEUVER_CODES_START && code < MANEUVER_DISTANCE_CODES_START)
  {
    //maneuver codes
    return code;
  }
  else if(code < HEADING_CODES_START)
  {
    //maneuver with distance codes
    return code - MANEUVER_DISTANCE_CODES_START + MANEUVER_DISTANCE_CODES_INTERNAL_START;
  }
  else if(code < GUIDANCE_CODES_START)
  {
    //heading codes - should be processed according compass measurements
    return code;
  }
  else if(code < BLE_CODES_START)
  {
    //guidance codes
    return code - GUIDANCE_CODES_START + GUIDANCE_CODES_INTERNAL_START;
  }
  else if(code < SPECIAL_CODES_START)
  {
    //Ble codes - no icons yet
    return 0;
  }
  else
  {
    //special codes - shouldn't be used as input commands
    return code - SPECIAL_CODES_START + SPECIAL_CODES_INTERNAL_START;
  }

}

#define NUM_BASIC_SYMBOLS (sizeof(icons)/sizeof(icons[0]))
